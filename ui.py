# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os
import sys
from pixiv_parser  import parseRankImg,parseImageByUserName

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(640, 480)
        
        # top-level stylesheet
        Form.setStyleSheet("QWidget{\n"
                            "    background-color:rgb(201, 255, 253);\n"
                            "}\n"
                            "QcomboBox{\n"
                            "    background-color:rgb(0, 255, 255);\n"
                            "    font-weight:10;\n"
                            "}\n"
                            "QLineEdit{\n"
                            "    background-color:rgb(237, 237, 237);\n"
                            "    border:2px,solid,gray;\n"
                            "    border-radius:10%;\n"
                            "    border-width:2px;\n"
                            "}\n"
                            "QPushButton{\n"
                            "    background-color:rgb(0, 170, 255);\n"
                            "    border:0px;\n"
                            "    border-radius:15%;\n"
                            "}\n"
                            "QPushButton:hover{\n"
                            "    background-color:rgb(0, 85, 255)\n"
                            "}")
        self.label_title = QtWidgets.QLabel(Form)
        self.label_title.setGeometry(QtCore.QRect(230, 10, 141, 51))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.label_title.setFont(font)
        self.label_title.setObjectName("label_title")
        self.label_site = QtWidgets.QLabel(Form)
        self.label_site.setGeometry(QtCore.QRect(530, 450, 101, 21))
        self.label_site.setObjectName("label_site")
        self.label_rank = QtWidgets.QLabel(Form)
        self.label_rank.setGeometry(QtCore.QRect(40, 100, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_rank.setFont(font)
        self.label_rank.setObjectName("label_rank")
        self.label_name = QtWidgets.QLabel(Form)
        self.label_name.setGeometry(QtCore.QRect(40, 250, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_name.setFont(font)
        self.label_name.setObjectName("label_name")
        self.comboBox_rank = QtWidgets.QComboBox(Form)
        self.comboBox_rank.setGeometry(QtCore.QRect(80, 160, 251, 41))
        self.comboBox_rank.setCurrentText("")
        self.comboBox_rank.setMaxVisibleItems(3)
        self.comboBox_rank.setMaxCount(3)
        self.comboBox_rank.setObjectName("comboBox_rank")

        # set comboBox items
        self.comboBox_rank.addItems(["Daily","Weekly","Monthly"])

        self.lineEdit_path = QtWidgets.QLineEdit(Form)
        self.lineEdit_path.setGeometry(QtCore.QRect(410, 70, 221, 31))
        self.lineEdit_path.setObjectName("lineEdit_path")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(350, 70, 59, 21))
        self.label_3.setObjectName("label_3")
        self.lineEdit_name = QtWidgets.QLineEdit(Form)
        self.lineEdit_name.setGeometry(QtCore.QRect(80, 340, 251, 41))
        self.lineEdit_name.setObjectName("lineEdit_name")
        self.pushButton_rank = QtWidgets.QPushButton(Form)
        self.pushButton_rank.setGeometry(QtCore.QRect(470, 160, 100, 36))
        self.pushButton_rank.setObjectName("pushButton_rank")
        self.pushButton_name = QtWidgets.QPushButton(Form)
        self.pushButton_name.setGeometry(QtCore.QRect(470, 340, 100, 36))
        self.pushButton_name.setStyleSheet("QPushButton{\n"
"background-color:rgb(85, 255, 0);\n"
"}\n"
"")
        self.pushButton_name.setObjectName("pushButton_name")

        self.retranslateUi(Form)
        self.comboBox_rank.setCurrentIndex(0)
        # add button events

        self.pushButton_name.clicked.connect(self.parseByName)
        self.pushButton_rank.clicked.connect(self.parseByRank)
        QtCore.QMetaObject.connectSlotsByName(Form)


    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_title.setText(_translate("Form", "PixivBot"))
        self.label_site.setText(_translate("Form", "chenycherry.top"))
        self.label_rank.setText(_translate("Form", "Parse ranks "))
        self.label_name.setText(_translate("Form", "Parse by name"))
        self.comboBox_rank.setPlaceholderText(_translate("Form", "Daily"))
        self.lineEdit_path.setPlaceholderText(_translate("Form", "~/downloads"))
        self.label_3.setText(_translate("Form", "Save to"))
        self.lineEdit_name.setPlaceholderText(_translate("Form", "Username"))
        self.pushButton_rank.setText(_translate("Form", "Parse"))
        self.pushButton_name.setText(_translate("Form", "Parse"))

    def checkSavePath(self):
        path=self.lineEdit_path.text()
        if not os.path.exists(path):
           QtWidgets.QMessageBox.information(None,"Info","No save path specified, default save path will be used.")
           return '~/Downloads' #return default save path.
        else:
            return path
        
    
    def parseByRank(self):
        rank=self.comboBox_rank.currentText()
        path=self.checkSavePath()
        if path is not None:
            #TODO(call relevant api)
            parseRankImg(rank.lower(),path)

        


    def parseByName(self):
        artistName=self.lineEdit_name.text()
        path=self.checkSavePath()
        #TODO(call relevant api)
        if path is not None:
            parseImageByUserName(artistName,path)
            
            



if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
